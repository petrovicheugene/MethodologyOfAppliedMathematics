(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[      9607,        205]
NotebookOptionsPosition[      9251,        188]
NotebookOutlinePosition[      9598,        203]
CellTagsIndexPosition[      9555,        200]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8074594885957465`*^9, 3.807459573877477*^9}, {
  3.8074602315846815`*^9, 3.807460232075718*^9}, {3.8074606698997545`*^9, 
  3.8074607150186625`*^9}, {3.8074609376774406`*^9, 3.8074609846593657`*^9}, {
  3.807461240392186*^9, 3.8074612844118533`*^9}, {3.807461923180952*^9, 
  3.8074619294814644`*^9}, {3.8074620529739394`*^9, 3.8074620551991205`*^9}, {
  3.8074626342574015`*^9, 3.807462642350071*^9}, {3.807462893785287*^9, 
  3.8074629018329573`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"x", "+", "1"}], "]"}], "-", "y"}], "==", "1.2"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"2", "x"}], "+", 
       RowBox[{"Cos", "[", "y", "]"}]}], "\[Equal]", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "0.5"}], ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.807459579858532*^9, 3.807459595112127*^9}, {
   3.8074596262609262`*^9, 3.8074596626052036`*^9}, {3.807460234905957*^9, 
   3.8074602356250143`*^9}, {3.807460722944321*^9, 3.8074607436190443`*^9}, {
   3.8074609913529167`*^9, 3.807461008196311*^9}, {3.807461258048665*^9, 
   3.807461258295679*^9}, {3.807461942455551*^9, 3.8074621760153146`*^9}, {
   3.807462255465091*^9, 3.8074623083434944`*^9}, {3.807462341826483*^9, 
   3.807462414590545*^9}, 3.8074624485165343`*^9, {3.80746249670855*^9, 
   3.807462564259444*^9}, {3.8074626507007666`*^9, 3.8074626516118455`*^9}, {
   3.807462692949553*^9, 3.807462849461445*^9}, {3.8074628816412754`*^9, 
   3.807462990544524*^9}, {3.80746312071763*^9, 3.8074631227548027`*^9}, {
   3.807463177834944*^9, 3.8074632258959403`*^9}, {3.8074632804356127`*^9, 
   3.8074634394398503`*^9}, {3.807463472599614*^9, 3.8074635979131703`*^9}, {
   3.8074636967295065`*^9, 3.8074636988246803`*^9}, {3.807464484284377*^9, 
   3.8074646915181985`*^9}, {3.8074647257010493`*^9, 3.80746475298147*^9}, {
   3.8074647868344307`*^9, 3.80746481197653*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
6Hnj+q9HRqgfekzi/wDSdx23
   "], {{}, {}, 
    TagBox[
     TooltipBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
        70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
        87, 88, 89, 90, 91, 92, 93, 94, 95}]},
      RowBox[{
        RowBox[{
          RowBox[{"-", "y"}], "+", 
          RowBox[{"Sin", "[", 
            RowBox[{"1", "+", "x"}], "]"}]}], "\[Equal]", "1.2`"}]],
     Annotation[#, -$CellContext`y + Sin[1 + $CellContext`x] == 1.2, 
      "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       LineBox[{96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 
        109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 
        123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 
        137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 
        151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 
        165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 
        179, 180, 181, 182, 183, 184, 185}]},
      RowBox[{
        RowBox[{
          RowBox[{"2", " ", "x"}], "+", 
          RowBox[{"Cos", "[", "y", "]"}]}], "\[Equal]", "2"}]],
     Annotation[#, 2 $CellContext`x + Cos[$CellContext`y] == 2, 
      "Tooltip"]& ]}],
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{577., Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotRange->{{0.4, 1}, {-0.5, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8074623732080936`*^9, 3.8074624165777082`*^9}, 
   3.8074624516637955`*^9, {3.8074625187176476`*^9, 3.8074625348329916`*^9}, 
   3.807462566434622*^9, 3.8074627724137344`*^9, 3.8074628133664365`*^9, 
   3.807462851505613*^9, 3.8074628838714604`*^9, {3.8074629497569494`*^9, 
   3.807462992327777*^9}, {3.8074631903119764`*^9, 3.807463228042118*^9}, 
   3.807463356112479*^9, {3.807463391437567*^9, 3.807463440740958*^9}, 
   3.8074634762699184`*^9, {3.8074635126439486`*^9, 3.8074635300293975`*^9}, 
   3.8074636010584307`*^9, 3.8074644872396193`*^9, {3.807464620314099*^9, 
   3.807464640165922*^9}, 3.8074646948124747`*^9, 3.807464754356577*^9, 
   3.807464813978697*^9}]
}, Open  ]]
},
WindowSize->{767, 667},
WindowMargins->{{Automatic, 154}, {Automatic, 98}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (September 9, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 502, 7, 31, "Input"],
Cell[CellGroupData[{
Cell[1085, 31, 1629, 32, 31, "Input"],
Cell[2717, 65, 6518, 120, 583, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

